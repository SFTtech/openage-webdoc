<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dd/d1a/pyexception_8cpp" kind="file" language="C++">
    <compoundname>pyexception.cpp</compoundname>
    <includes refid="d9/db0/pyexception_8h" local="yes">pyexception.h</includes>
    <includes refid="d7/d7f/log_8h" local="yes">../log/log.h</includes>
    <incdepgraph>
      <node id="20051">
        <label>list</label>
      </node>
      <node id="20058">
        <label>../util/language.h</label>
        <link refid="d8/dce/language_8h"/>
      </node>
      <node id="20042">
        <label>atomic</label>
      </node>
      <node id="20063">
        <label>../log/log.h</label>
        <link refid="d7/d7f/log_8h"/>
        <childnode refid="20053" relation="include">
        </childnode>
        <childnode refid="20036" relation="include">
        </childnode>
      </node>
      <node id="20048">
        <label>iomanip</label>
      </node>
      <node id="20047">
        <label>functional</label>
      </node>
      <node id="20037">
        <label>cstdint</label>
      </node>
      <node id="20044">
        <label>externalsstream.h</label>
        <link refid="dc/dcf/externalsstream_8h"/>
        <childnode refid="20031" relation="include">
        </childnode>
        <childnode refid="20028" relation="include">
        </childnode>
      </node>
      <node id="20035">
        <label>signal.h</label>
        <link refid="d8/d39/signal_8h"/>
        <childnode refid="20035" relation="include">
        </childnode>
      </node>
      <node id="20057">
        <label>functional.h</label>
        <link refid="d8/dea/functional_8h"/>
        <childnode refid="20047" relation="include">
        </childnode>
        <childnode refid="20052" relation="include">
        </childnode>
        <childnode refid="20033" relation="include">
        </childnode>
        <childnode refid="20058" relation="include">
        </childnode>
        <childnode refid="20059" relation="include">
        </childnode>
        <childnode refid="20060" relation="include">
        </childnode>
      </node>
      <node id="20032">
        <label>stdexcept</label>
      </node>
      <node id="20059">
        <label>exctranslate.h</label>
        <link refid="dd/d5f/exctranslate_8h"/>
        <childnode refid="20030" relation="include">
        </childnode>
      </node>
      <node id="20046">
        <label>cstdarg</label>
      </node>
      <node id="20028">
        <label>string</label>
      </node>
      <node id="20050">
        <label>logsink.h</label>
        <link refid="d3/d4e/logsink_8h"/>
        <childnode refid="20051" relation="include">
        </childnode>
        <childnode refid="20052" relation="include">
        </childnode>
        <childnode refid="20053" relation="include">
        </childnode>
      </node>
      <node id="20036">
        <label>../log/message.h</label>
        <link refid="d2/d0d/message_8h"/>
        <childnode refid="20037" relation="include">
        </childnode>
        <childnode refid="20028" relation="include">
        </childnode>
        <childnode refid="20038" relation="include">
        </childnode>
        <childnode refid="20039" relation="include">
        </childnode>
        <childnode refid="20041" relation="include">
        </childnode>
        <childnode refid="20050" relation="include">
        </childnode>
        <childnode refid="20053" relation="include">
        </childnode>
      </node>
      <node id="20054">
        <label>../util/enum.h</label>
        <link refid="d0/d9b/enum_8h"/>
        <childnode refid="20031" relation="include">
        </childnode>
        <childnode refid="20055" relation="include">
        </childnode>
        <childnode refid="20033" relation="include">
        </childnode>
      </node>
      <node id="20055">
        <label>typeinfo</label>
      </node>
      <node id="20029">
        <label>vector</label>
      </node>
      <node id="20034">
        <label>ciso646</label>
      </node>
      <node id="20062">
        <label>defs.h</label>
        <link refid="d5/d64/defs_8h"/>
      </node>
      <node id="20030">
        <label>../error/error.h</label>
        <link refid="d7/dce/error_2error_8h"/>
        <childnode refid="20031" relation="include">
        </childnode>
        <childnode refid="20027" relation="include">
        </childnode>
        <childnode refid="20032" relation="include">
        </childnode>
        <childnode refid="20028" relation="include">
        </childnode>
        <childnode refid="20033" relation="include">
        </childnode>
        <childnode refid="20036" relation="include">
        </childnode>
      </node>
      <node id="20049">
        <label>sstream</label>
      </node>
      <node id="20060">
        <label>setup.h</label>
        <link refid="d7/df7/setup_8h"/>
        <childnode refid="20047" relation="include">
        </childnode>
        <childnode refid="20033" relation="include">
        </childnode>
      </node>
      <node id="20033">
        <label>../util/compiler.h</label>
        <link refid="d4/dd1/compiler_8h"/>
        <childnode refid="20034" relation="include">
        </childnode>
        <childnode refid="20028" relation="include">
        </childnode>
        <childnode refid="20035" relation="include">
        </childnode>
      </node>
      <node id="20040">
        <label>cstdlib</label>
      </node>
      <node id="20053">
        <label>level.h</label>
        <link refid="de/d09/level_8h"/>
        <childnode refid="20054" relation="include">
        </childnode>
      </node>
      <node id="20031">
        <label>iostream</label>
      </node>
      <node id="20039">
        <label>../util/constexpr.h</label>
        <link refid="d1/d06/constexpr_8h"/>
        <childnode refid="20040" relation="include">
        </childnode>
      </node>
      <node id="20061">
        <label>pyobject.h</label>
        <link refid="d2/d4b/pyobject_8h"/>
        <childnode refid="20037" relation="include">
        </childnode>
        <childnode refid="20028" relation="include">
        </childnode>
        <childnode refid="20029" relation="include">
        </childnode>
        <childnode refid="20062" relation="include">
        </childnode>
        <childnode refid="20057" relation="include">
        </childnode>
      </node>
      <node id="20045">
        <label>strings.h</label>
        <link refid="d6/d90/strings_8h"/>
        <childnode refid="20046" relation="include">
        </childnode>
        <childnode refid="20047" relation="include">
        </childnode>
        <childnode refid="20048" relation="include">
        </childnode>
        <childnode refid="20027" relation="include">
        </childnode>
        <childnode refid="20049" relation="include">
        </childnode>
        <childnode refid="20028" relation="include">
        </childnode>
        <childnode refid="20029" relation="include">
        </childnode>
      </node>
      <node id="20052">
        <label>mutex</label>
      </node>
      <node id="20026">
        <label>pyexception.h</label>
        <link refid="d9/db0/pyexception_8h"/>
        <childnode refid="20027" relation="include">
        </childnode>
        <childnode refid="20028" relation="include">
        </childnode>
        <childnode refid="20029" relation="include">
        </childnode>
        <childnode refid="20030" relation="include">
        </childnode>
        <childnode refid="20056" relation="include">
        </childnode>
        <childnode refid="20057" relation="include">
        </childnode>
        <childnode refid="20061" relation="include">
        </childnode>
      </node>
      <node id="20041">
        <label>../util/stringformatter.h</label>
        <link refid="de/d65/stringformatter_8h"/>
        <childnode refid="20042" relation="include">
        </childnode>
        <childnode refid="20027" relation="include">
        </childnode>
        <childnode refid="20043" relation="include">
        </childnode>
        <childnode refid="20033" relation="include">
        </childnode>
        <childnode refid="20044" relation="include">
        </childnode>
        <childnode refid="20045" relation="include">
        </childnode>
      </node>
      <node id="20043">
        <label>type_traits</label>
      </node>
      <node id="20038">
        <label>config.h</label>
      </node>
      <node id="20025">
        <label>/mnt/c/Users/Jameson/Desktop/git/openage-new-doc-system/libopenage/pyinterface/pyexception.cpp</label>
        <link refid="dd/d1a/pyexception_8cpp"/>
        <childnode refid="20026" relation="include">
        </childnode>
        <childnode refid="20063" relation="include">
        </childnode>
      </node>
      <node id="20027">
        <label>memory</label>
      </node>
      <node id="20056">
        <label>../error/backtrace.h</label>
        <link refid="d3/dda/backtrace_8h"/>
        <childnode refid="20029" relation="include">
        </childnode>
        <childnode refid="20028" relation="include">
        </childnode>
        <childnode refid="20031" relation="include">
        </childnode>
        <childnode refid="20047" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="da/d23/namespaceopenage">openage</innernamespace>
    <innernamespace refid="d9/dde/namespaceopenage_1_1pyinterface">openage::pyinterface</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2017<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/db0/pyexception_8h" kindref="compound">pyexception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../log/log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="da/d23/namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pyinterface<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="d3/d7f/classopenage_1_1pyinterface_1_1_py_exception_backtrace_1ac33230cda520fbd8269fc58154607d29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d3/d7f/classopenage_1_1pyinterface_1_1_py_exception_backtrace_1ac33230cda520fbd8269fc58154607d29" kindref="member">PyExceptionBacktrace::get_symbols</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d66/structopenage_1_1error_1_1backtrace__symbol" kindref="compound">error::backtrace_symbol</ref><sp/>*)&gt;<sp/>cb,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reversed)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dde/namespaceopenage_1_1pyinterface_1abd497e13d9c1d349faac93274a50dece" kindref="member">pyexception_bt_get_symbols</ref>.call(this-&gt;<ref refid="d3/d7f/classopenage_1_1pyinterface_1_1_py_exception_backtrace_1a6fdae658b88f0eee99c803e265d5ae97" kindref="member">ref</ref>,<sp/>cb);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pyexception_bt_get_symbols<sp/>gives<sp/>us<sp/>the<sp/>symbols<sp/>in<sp/>reverse<sp/>order,<sp/>we&apos;ll<sp/>have<sp/>to<sp/>use<sp/>a<sp/>std::vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>flip<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;error::backtrace_symbol&gt;<sp/>symbols;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dde/namespaceopenage_1_1pyinterface_1abd497e13d9c1d349faac93274a50dece" kindref="member">pyexception_bt_get_symbols</ref>.call(this-&gt;<ref refid="d3/d7f/classopenage_1_1pyinterface_1_1_py_exception_backtrace_1a6fdae658b88f0eee99c803e265d5ae97" kindref="member">ref</ref>,<sp/>[&amp;symbols](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d66/structopenage_1_1error_1_1backtrace__symbol" kindref="compound">error::backtrace_symbol</ref><sp/>*symbol)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols.emplace_back(*symbol);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>symbols.size();<sp/>idx--<sp/>&gt;<sp/>0;)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb(&amp;symbols[idx]);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="df/d62/classopenage_1_1pyinterface_1_1_py_exception_1aa8b1811a748a3b9098ecea916a925393" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d62/classopenage_1_1pyinterface_1_1_py_exception_1aa8b1811a748a3b9098ecea916a925393" kindref="member">PyException::init_backtrace</ref>()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;backtrace<sp/>=<sp/>std::make_shared&lt;PyExceptionBacktrace&gt;(this-&gt;py_obj.get_ref());</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="df/d62/classopenage_1_1pyinterface_1_1_py_exception_1a1352d1476e7824c11aca00df918879e1" refkind="member"><highlight class="normal">std::string<sp/><ref refid="df/d62/classopenage_1_1pyinterface_1_1_py_exception_1a1352d1476e7824c11aca00df918879e1" kindref="member">PyException::type_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="d5/d0e/namespaceopenage_1_1testing_1_1testing_1ac25bf81db406af62d08113ef7ae9fd6e" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>result.append(this-&gt;py_obj.modulename());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>result.append(this-&gt;py_obj.classname());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/d0e/namespaceopenage_1_1testing_1_1testing_1ac25bf81db406af62d08113ef7ae9fd6e" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="d9/dde/namespaceopenage_1_1pyinterface_1abd497e13d9c1d349faac93274a50dece" refkind="member"><highlight class="normal"><ref refid="d2/d29/classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObject *, Func&lt;void, const error::backtrace_symbol *&gt;</ref>&gt;<sp/><ref refid="d9/dde/namespaceopenage_1_1pyinterface_1abd497e13d9c1d349faac93274a50dece" kindref="member">pyexception_bt_get_symbols</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//<sp/>openage::pyinterface</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/mnt/c/Users/Jameson/Desktop/git/openage-new-doc-system/libopenage/pyinterface/pyexception.cpp"/>
  </compounddef>
</doxygen>
