<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d3/d62/directory_8cpp" kind="file" language="C++">
    <compoundname>directory.cpp</compoundname>
    <includes refid="d9/d0f/directory_8h" local="yes">directory.h</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="d3/d0f/fslike_2native_8h" local="yes">./native.h</includes>
    <includes refid="d2/d4d/file_8h" local="yes">../file.h</includes>
    <includes refid="d1/d72/filelike_2native_8h" local="yes">../filelike/native.h</includes>
    <includes refid="d4/d08/misc_8h" local="yes">../misc.h</includes>
    <includes refid="d1/d11/util_2path_8h" local="yes">../path.h</includes>
    <incdepgraph>
      <node id="30670">
        <label>sys/stat.h</label>
      </node>
      <node id="30704">
        <label>list</label>
      </node>
      <node id="30687">
        <label>../util/language.h</label>
        <link refid="d8/dce/language_8h"/>
      </node>
      <node id="30696">
        <label>atomic</label>
      </node>
      <node id="30701">
        <label>iomanip</label>
      </node>
      <node id="30682">
        <label>functional</label>
      </node>
      <node id="30711">
        <label>fslike/native.h</label>
        <link refid="d3/d0f/fslike_2native_8h"/>
      </node>
      <node id="30674">
        <label>cstdint</label>
      </node>
      <node id="30698">
        <label>externalsstream.h</label>
        <link refid="dc/dcf/externalsstream_8h"/>
        <childnode refid="30675" relation="include">
        </childnode>
        <childnode refid="30669" relation="include">
        </childnode>
      </node>
      <node id="30686">
        <label>signal.h</label>
        <link refid="d8/d39/signal_8h"/>
        <childnode refid="30686" relation="include">
        </childnode>
      </node>
      <node id="30719">
        <label>../misc.h</label>
        <link refid="d4/d08/misc_8h"/>
        <childnode refid="30720" relation="include">
        </childnode>
        <childnode refid="30721" relation="include">
        </childnode>
        <childnode refid="30722" relation="include">
        </childnode>
        <childnode refid="30723" relation="include">
        </childnode>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30672" relation="include">
        </childnode>
        <childnode refid="30676" relation="include">
        </childnode>
        <childnode refid="30689" relation="include">
        </childnode>
        <childnode refid="30684" relation="include">
        </childnode>
      </node>
      <node id="30681">
        <label>functional.h</label>
        <link refid="d8/dea/functional_8h"/>
        <childnode refid="30682" relation="include">
        </childnode>
        <childnode refid="30683" relation="include">
        </childnode>
        <childnode refid="30684" relation="include">
        </childnode>
        <childnode refid="30687" relation="include">
        </childnode>
        <childnode refid="30688" relation="include">
        </childnode>
        <childnode refid="30708" relation="include">
        </childnode>
      </node>
      <node id="30722">
        <label>cmath</label>
      </node>
      <node id="30690">
        <label>stdexcept</label>
      </node>
      <node id="30673">
        <label>fslike.h</label>
        <link refid="d4/dfb/fslike_8h"/>
        <childnode refid="30674" relation="include">
        </childnode>
        <childnode refid="30675" relation="include">
        </childnode>
        <childnode refid="30676" relation="include">
        </childnode>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30677" relation="include">
        </childnode>
        <childnode refid="30678" relation="include">
        </childnode>
        <childnode refid="30709" relation="include">
        </childnode>
      </node>
      <node id="30714">
        <label>fcntl.h</label>
      </node>
      <node id="30688">
        <label>exctranslate.h</label>
        <link refid="dd/d5f/exctranslate_8h"/>
        <childnode refid="30689" relation="include">
        </childnode>
      </node>
      <node id="30717">
        <label>../filelike/native.h</label>
        <link refid="d1/d72/filelike_2native_8h"/>
        <childnode refid="30718" relation="include">
        </childnode>
        <childnode refid="30675" relation="include">
        </childnode>
        <childnode refid="30676" relation="include">
        </childnode>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30710" relation="include">
        </childnode>
      </node>
      <node id="30700">
        <label>cstdarg</label>
      </node>
      <node id="30669">
        <label>string</label>
      </node>
      <node id="30703">
        <label>logsink.h</label>
        <link refid="d3/d4e/logsink_8h"/>
        <childnode refid="30704" relation="include">
        </childnode>
        <childnode refid="30683" relation="include">
        </childnode>
        <childnode refid="30705" relation="include">
        </childnode>
      </node>
      <node id="30718">
        <label>fstream</label>
      </node>
      <node id="30691">
        <label>../log/message.h</label>
        <link refid="d2/d0d/message_8h"/>
        <childnode refid="30674" relation="include">
        </childnode>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30692" relation="include">
        </childnode>
        <childnode refid="30693" relation="include">
        </childnode>
        <childnode refid="30695" relation="include">
        </childnode>
        <childnode refid="30703" relation="include">
        </childnode>
        <childnode refid="30705" relation="include">
        </childnode>
      </node>
      <node id="30721">
        <label>limits.h</label>
      </node>
      <node id="30706">
        <label>../util/enum.h</label>
        <link refid="d0/d9b/enum_8h"/>
        <childnode refid="30675" relation="include">
        </childnode>
        <childnode refid="30707" relation="include">
        </childnode>
        <childnode refid="30684" relation="include">
        </childnode>
      </node>
      <node id="30667">
        <label>/mnt/c/Users/Jameson/Desktop/git/openage-new-doc-system/libopenage/util/fslike/directory.cpp</label>
        <link refid="d3/d62/directory_8cpp"/>
        <childnode refid="30668" relation="include">
        </childnode>
        <childnode refid="30712" relation="include">
        </childnode>
        <childnode refid="30713" relation="include">
        </childnode>
        <childnode refid="30714" relation="include">
        </childnode>
        <childnode refid="30675" relation="include">
        </childnode>
        <childnode refid="30670" relation="include">
        </childnode>
        <childnode refid="30715" relation="include">
        </childnode>
        <childnode refid="30716" relation="include">
        </childnode>
        <childnode refid="30711" relation="include">
        </childnode>
        <childnode refid="30709" relation="include">
        </childnode>
        <childnode refid="30717" relation="include">
        </childnode>
        <childnode refid="30719" relation="include">
        </childnode>
        <childnode refid="30678" relation="include">
        </childnode>
      </node>
      <node id="30715">
        <label>sys/types.h</label>
      </node>
      <node id="30709">
        <label>file.h</label>
        <link refid="d2/d4d/file_8h"/>
        <childnode refid="30676" relation="include">
        </childnode>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30672" relation="include">
        </childnode>
        <childnode refid="30710" relation="include">
        </childnode>
        <childnode refid="30679" relation="include">
        </childnode>
      </node>
      <node id="30710">
        <label>filelike/filelike.h</label>
        <link refid="d7/db5/filelike_8h"/>
        <childnode refid="30675" relation="include">
        </childnode>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30684" relation="include">
        </childnode>
      </node>
      <node id="30707">
        <label>typeinfo</label>
      </node>
      <node id="30712">
        <label>cstdio</label>
      </node>
      <node id="30671">
        <label>tuple</label>
      </node>
      <node id="30716">
        <label>unistd.h</label>
      </node>
      <node id="30672">
        <label>vector</label>
      </node>
      <node id="30685">
        <label>ciso646</label>
      </node>
      <node id="30680">
        <label>defs.h</label>
        <link refid="d5/d64/defs_8h"/>
      </node>
      <node id="30689">
        <label>../error/error.h</label>
        <link refid="d7/dce/error_2error_8h"/>
        <childnode refid="30675" relation="include">
        </childnode>
        <childnode refid="30676" relation="include">
        </childnode>
        <childnode refid="30690" relation="include">
        </childnode>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30684" relation="include">
        </childnode>
        <childnode refid="30691" relation="include">
        </childnode>
      </node>
      <node id="30677">
        <label>utility</label>
      </node>
      <node id="30702">
        <label>sstream</label>
      </node>
      <node id="30708">
        <label>setup.h</label>
        <link refid="d7/df7/setup_8h"/>
        <childnode refid="30682" relation="include">
        </childnode>
        <childnode refid="30684" relation="include">
        </childnode>
      </node>
      <node id="30684">
        <label>../util/compiler.h</label>
        <link refid="d4/dd1/compiler_8h"/>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30686" relation="include">
        </childnode>
      </node>
      <node id="30668">
        <label>directory.h</label>
        <link refid="d9/d0f/directory_8h"/>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30670" relation="include">
        </childnode>
        <childnode refid="30671" relation="include">
        </childnode>
        <childnode refid="30672" relation="include">
        </childnode>
        <childnode refid="30673" relation="include">
        </childnode>
      </node>
      <node id="30694">
        <label>cstdlib</label>
      </node>
      <node id="30705">
        <label>level.h</label>
        <link refid="de/d09/level_8h"/>
        <childnode refid="30706" relation="include">
        </childnode>
      </node>
      <node id="30675">
        <label>iostream</label>
      </node>
      <node id="30693">
        <label>../util/constexpr.h</label>
        <link refid="d1/d06/constexpr_8h"/>
        <childnode refid="30694" relation="include">
        </childnode>
      </node>
      <node id="30679">
        <label>../pyinterface/pyobject.h</label>
        <link refid="d2/d4b/pyobject_8h"/>
        <childnode refid="30674" relation="include">
        </childnode>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30672" relation="include">
        </childnode>
        <childnode refid="30680" relation="include">
        </childnode>
        <childnode refid="30681" relation="include">
        </childnode>
      </node>
      <node id="30699">
        <label>strings.h</label>
        <link refid="d6/d90/strings_8h"/>
        <childnode refid="30700" relation="include">
        </childnode>
        <childnode refid="30682" relation="include">
        </childnode>
        <childnode refid="30701" relation="include">
        </childnode>
        <childnode refid="30676" relation="include">
        </childnode>
        <childnode refid="30702" relation="include">
        </childnode>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30672" relation="include">
        </childnode>
      </node>
      <node id="30683">
        <label>mutex</label>
      </node>
      <node id="30695">
        <label>../util/stringformatter.h</label>
        <link refid="de/d65/stringformatter_8h"/>
        <childnode refid="30696" relation="include">
        </childnode>
        <childnode refid="30676" relation="include">
        </childnode>
        <childnode refid="30697" relation="include">
        </childnode>
        <childnode refid="30684" relation="include">
        </childnode>
        <childnode refid="30698" relation="include">
        </childnode>
        <childnode refid="30699" relation="include">
        </childnode>
      </node>
      <node id="30697">
        <label>type_traits</label>
      </node>
      <node id="30692">
        <label>config.h</label>
      </node>
      <node id="30720">
        <label>algorithm</label>
      </node>
      <node id="30678">
        <label>../path.h</label>
        <link refid="d1/d11/util_2path_8h"/>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30672" relation="include">
        </childnode>
        <childnode refid="30679" relation="include">
        </childnode>
        <childnode refid="30709" relation="include">
        </childnode>
        <childnode refid="30711" relation="include">
        </childnode>
      </node>
      <node id="30723">
        <label>cstring</label>
      </node>
      <node id="30676">
        <label>memory</label>
      </node>
      <node id="30713">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="da/d23/namespaceopenage">openage</innernamespace>
    <innernamespace refid="de/d60/namespaceopenage_1_1util">openage::util</innernamespace>
    <innernamespace refid="dd/dcc/namespaceopenage_1_1util_1_1fslike">openage::util::fslike</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017-2019<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d0f/directory_8h" kindref="compound">directory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HACK:<sp/>windows.h<sp/>defines<sp/>max<sp/>and<sp/>min<sp/>as<sp/>macros.<sp/>This<sp/>results<sp/>in<sp/>compile<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defining<sp/>`NOMINMAX`<sp/>disables<sp/>the<sp/>definition<sp/>of<sp/>those<sp/>macros.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NOMINMAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;direct.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/utime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HACK:<sp/>What<sp/>the<sp/>heck?<sp/>I<sp/>want<sp/>the<sp/>std::filesystem<sp/>library!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>O_NOCTTY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>O_NONBLOCK<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>W_OK<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>!<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d72/filelike_2native_8h" kindref="compound">./native.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../file.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../filelike/native.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../misc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../path.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="da/d23/namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="42" refid="dd/dcc/namespaceopenage_1_1util_1_1fslike" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fslike<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a2bef103b4ee6cf8dda2c55ada35ae060" refkind="member"><highlight class="normal"><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a2bef103b4ee6cf8dda2c55ada35ae060" kindref="member">Directory::Directory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;basepath,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>create_if_missing)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>basepath{basepath}<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(create_if_missing)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a441128dffdf9ebc274a4c1c5461ed05a" kindref="member">mkdirs</ref>({});</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>need<sp/>a<sp/>resolve_r<sp/>and<sp/>resolve_w<sp/>here!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>underlying<sp/>fslike<sp/>system<sp/>is<sp/>a<sp/>Directory<sp/>(i.e.<sp/>this.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>we<sp/>don&apos;t<sp/>have<sp/>any<sp/>overlay<sp/>possibility!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-&gt;<sp/>Always<sp/>resolve<sp/>just<sp/>the<sp/>real<sp/>system<sp/>filename.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" refkind="member"><highlight class="normal">std::string<sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">Directory::resolve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ret<sp/>=<sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ac5f0417c9e573584edfedfe386f05c2f" kindref="member">basepath</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;part<sp/>:<sp/>parts)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/><ref refid="dd/dcc/namespaceopenage_1_1util_1_1fslike_1a670007c84e8b0cf3c4f0dfd74e0f6399" kindref="member">PATHSEP</ref><sp/>+<sp/>part;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>use<sp/>std::optional<sp/>when<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a2c5d51674da6c9c62ae8753f3a8a6cd0" refkind="member"><highlight class="normal">std::tuple&lt;struct<sp/>stat,<sp/>int&gt;<sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a2c5d51674da6c9c62ae8753f3a8a6cd0" kindref="member">Directory::do_stat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>path<sp/>=<sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>buf;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d0e/namespaceopenage_1_1testing_1_1testing_1ac25bf81db406af62d08113ef7ae9fd6e" kindref="member">result</ref><sp/>=<sp/>stat(path.c_str(),<sp/>&amp;buf);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(buf,<sp/>result);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a36e4b63f3b31b1de2370ebe081484159" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a36e4b63f3b31b1de2370ebe081484159" kindref="member">Directory::is_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stat_result<sp/>=<sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a2c5d51674da6c9c62ae8753f3a8a6cd0" kindref="member">do_stat</ref>(parts);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>for<sp/>regular<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;1&gt;(stat_result)<sp/>==<sp/>0<sp/>and</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_ISREG(std::get&lt;0&gt;(stat_result).st_mode))<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ac5dced8dddac80ad98b3804a64a36af0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ac5dced8dddac80ad98b3804a64a36af0" kindref="member">Directory::is_dir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stat_result<sp/>=<sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a2c5d51674da6c9c62ae8753f3a8a6cd0" kindref="member">do_stat</ref>(parts);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>for<sp/>regular<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;1&gt;(stat_result)<sp/>==<sp/>0<sp/>and</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_ISDIR(std::get&lt;0&gt;(stat_result).st_mode))<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1aa05f20e2d1e377421774d2360d54d237" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1aa05f20e2d1e377421774d2360d54d237" kindref="member">Directory::writable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>parts_test<sp/>=<sp/>parts;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>find<sp/>the<sp/>first<sp/>existing<sp/>path-part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(not<sp/>(this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ac5dced8dddac80ad98b3804a64a36af0" kindref="member">is_dir</ref>(parts_test)<sp/>or</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a36e4b63f3b31b1de2370ebe081484159" kindref="member">is_file</ref>(parts_test)))<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parts_test.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d0/df4/classopenage_1_1error_1_1_error" kindref="compound">Error</ref>{<ref refid="d2/d0d/message_8h_1a735563036dced0b7d6cc98f97ea4978b" kindref="member">ERR</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;file<sp/>not<sp/>found&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts_test.pop_back();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>path<sp/>=<sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts_test);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>access(path.c_str(),<sp/>W_OK);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a34049b9a977a33a7173bb90ab96df65f" refkind="member"><highlight class="normal">std::vector&lt;Path::part_t&gt;<sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a34049b9a977a33a7173bb90ab96df65f" kindref="member">Directory::list</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>path<sp/>=<sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Path::part_t&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>DIR<sp/>*dir;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*ent;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>opendir(path.c_str());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d0/df4/classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="d2/d0d/message_8h_1a735563036dced0b7d6cc98f97ea4978b" kindref="member">ERR</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>list<sp/>contents<sp/>of<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>path<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>walk<sp/>over<sp/>dir<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ent<sp/>=<sp/>readdir(dir))<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.push_back(ent-&gt;d_name);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>closedir(dir);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a441128dffdf9ebc274a4c1c5461ed05a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a441128dffdf9ebc274a4c1c5461ed05a" kindref="member">Directory::mkdirs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>all_parts<sp/>=<sp/><ref refid="de/d60/namespaceopenage_1_1util_1a9556b8562574e2c6ad102d8fd87569c6" kindref="member">util::split</ref>(this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ac5f0417c9e573584edfedfe386f05c2f" kindref="member">basepath</ref>,<sp/><ref refid="dd/dcc/namespaceopenage_1_1util_1_1fslike_1a670007c84e8b0cf3c4f0dfd74e0f6399" kindref="member">PATHSEP</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1af88424f642ef1ba4e6b2eb1c05ad8e3c" kindref="member">vector_extend</ref>(all_parts,<sp/>parts);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>dirpath;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;part<sp/>:<sp/>all_parts)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirpath<sp/>+=<sp/><ref refid="dd/dcc/namespaceopenage_1_1util_1_1fslike_1a670007c84e8b0cf3c4f0dfd74e0f6399" kindref="member">PATHSEP</ref><sp/>+<sp/>part;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>buf;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>it<sp/>exists<sp/>already,<sp/>try<sp/>creating<sp/>the<sp/>next<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat(dirpath.c_str(),<sp/>&amp;buf)<sp/>==<sp/>0<sp/>and</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_ISDIR(buf.st_mode))<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>folder,<sp/>umask<sp/>will<sp/>turn<sp/>it<sp/>to<sp/>755.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dir_created<sp/>=<sp/>_mkdir(dirpath.c_str())<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>__MINGW32__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dir_created<sp/>=<sp/>mkdir(dirpath.c_str())<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dir_created<sp/>=<sp/>mkdir(dirpath.c_str(),<sp/>0777)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>dir_created)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a85129377f5f8b133c45ea585b42b6e4e" refkind="member"><highlight class="normal"><ref refid="dc/d27/classopenage_1_1util_1_1_file" kindref="compound">File</ref><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a85129377f5f8b133c45ea585b42b6e4e" kindref="member">Directory::open_r</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/d27/classopenage_1_1util_1_1_file" kindref="compound">File</ref>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;filelike::Native&gt;(this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts),</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/da6/classopenage_1_1util_1_1filelike_1_1_file_like_1ab68557b264011908164b43b32a9f00b1ae1e1d3d40573127e9ee0480caf1283d6" kindref="member">filelike::Native::mode_t::R</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a30009d2a2d94139e2688d07b5df1de8a" refkind="member"><highlight class="normal"><ref refid="dc/d27/classopenage_1_1util_1_1_file" kindref="compound">File</ref><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a30009d2a2d94139e2688d07b5df1de8a" kindref="member">Directory::open_w</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/d27/classopenage_1_1util_1_1_file" kindref="compound">File</ref>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;filelike::Native&gt;(this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts),</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/da6/classopenage_1_1util_1_1filelike_1_1_file_like_1ab68557b264011908164b43b32a9f00b1a61e9c06ea9a85a5088a499df6458d276" kindref="member">filelike::Native::mode_t::W</ref>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ab5decb9af0d2373df3a4c6acade814e3" refkind="member"><highlight class="normal"><ref refid="dc/d27/classopenage_1_1util_1_1_file" kindref="compound">File</ref><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ab5decb9af0d2373df3a4c6acade814e3" kindref="member">Directory::open_rw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/d27/classopenage_1_1util_1_1_file" kindref="compound">File</ref>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;filelike::Native&gt;(this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/da6/classopenage_1_1util_1_1filelike_1_1_file_like_1ab68557b264011908164b43b32a9f00b1a5c6dc3d436504b7a65191cafe28212ee" kindref="member">filelike::Native::mode_t::RW</ref>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ac4207abf1b91ac361bba198c58709555" refkind="member"><highlight class="normal"><ref refid="dc/d27/classopenage_1_1util_1_1_file" kindref="compound">File</ref><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ac4207abf1b91ac361bba198c58709555" kindref="member">Directory::open_a</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/d27/classopenage_1_1util_1_1_file" kindref="compound">File</ref>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;filelike::Native&gt;(this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts),</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/da6/classopenage_1_1util_1_1filelike_1_1_file_like_1ab68557b264011908164b43b32a9f00b1a7fc56270e7a70fa81a5935b72eacbe29" kindref="member">filelike::Native::mode_t::A</ref>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1af22803a261b1e56ddf1b3046f34c4914" refkind="member"><highlight class="normal"><ref refid="dc/d27/classopenage_1_1util_1_1_file" kindref="compound">File</ref><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1af22803a261b1e56ddf1b3046f34c4914" kindref="member">Directory::open_ar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/d27/classopenage_1_1util_1_1_file" kindref="compound">File</ref>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;filelike::Native&gt;(this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts),</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/da6/classopenage_1_1util_1_1filelike_1_1_file_like_1ab68557b264011908164b43b32a9f00b1a5b61a1b298a0d06efa6933a97e68d763" kindref="member">filelike::Native::mode_t::AR</ref>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1aa1f011f4012ff1e02ecfdd5df30b7e84" refkind="member"><highlight class="normal">std::string<sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1aa1f011f4012ff1e02ecfdd5df30b7e84" kindref="member">Directory::get_native_path</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts);</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ad63db9e7e3a5f49a93f47d7904f2de33" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ad63db9e7e3a5f49a93f47d7904f2de33" kindref="member">Directory::rename</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;target_parts)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::rename(this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts).c_str(),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(target_parts).c_str())<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ad25337a6884cc2a497b1f142e4f01225" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ad25337a6884cc2a497b1f142e4f01225" kindref="member">Directory::rmdir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::rmdir(this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts).c_str())<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ab5d2482157fe89058a2a763141c4d9e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ab5d2482157fe89058a2a763141c4d9e9" kindref="member">Directory::touch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>path<sp/>=<sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>file<sp/>if<sp/>missing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.c_str(),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>O_WRONLY|O_CREAT|O_NOCTTY|O_NONBLOCK,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0666</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d0e/namespaceopenage_1_1testing_1_1testing_1ac25bf81db406af62d08113ef7ae9fd6e" kindref="member">result</ref><sp/>=<sp/>utimes(path.c_str(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>_utime(path.c_str(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>utimensat(AT_FDCWD,<sp/>path.c_str(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/d0e/namespaceopenage_1_1testing_1_1testing_1ac25bf81db406af62d08113ef7ae9fd6e" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1aea004e3d87864f6f13e2c5d79fc67d2e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1aea004e3d87864f6f13e2c5d79fc67d2e" kindref="member">Directory::unlink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::remove(this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a7dab02972c0d0fa8ef5b3fd387966855" kindref="member">resolve</ref>(parts).c_str())<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a4edc467134f448398dbe7cf5ad4dcc11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a4edc467134f448398dbe7cf5ad4dcc11" kindref="member">Directory::get_mtime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stat_result<sp/>=<sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a2c5d51674da6c9c62ae8753f3a8a6cd0" kindref="member">do_stat</ref>(parts);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>mtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;1&gt;(stat_result)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;0&gt;(stat_result).st_mtimespec.tv_sec;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">#elif<sp/>defined<sp/>_WIN32</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;0&gt;(stat_result).st_mtime;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;0&gt;(stat_result).st_mtim.tv_sec;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d0/df4/classopenage_1_1error_1_1_error" kindref="compound">Error</ref>{<ref refid="d2/d0d/message_8h_1a735563036dced0b7d6cc98f97ea4978b" kindref="member">ERR</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>get<sp/>mtime&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a071636c64e89976aaa350083c66b6a4a" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a071636c64e89976aaa350083c66b6a4a" kindref="member">Directory::get_filesize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc1/classopenage_1_1util_1_1_path_1a45bb33ddb21332a423a5788fc9ee8462" kindref="member">Path::parts_t</ref><sp/>&amp;parts)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stat_result<sp/>=<sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1a2c5d51674da6c9c62ae8753f3a8a6cd0" kindref="member">do_stat</ref>(parts);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>mtime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;1&gt;(stat_result)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;0&gt;(stat_result).st_size;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d0/df4/classopenage_1_1error_1_1_error" kindref="compound">Error</ref>{<ref refid="d2/d0d/message_8h_1a735563036dced0b7d6cc98f97ea4978b" kindref="member">ERR</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>get<sp/>filesize&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1aae57b59ff2e61cbb96d44ffe58f1f72b" refkind="member"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1aae57b59ff2e61cbb96d44ffe58f1f72b" kindref="member">Directory::repr</ref>(std::ostream<sp/>&amp;stream)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>this-&gt;<ref refid="dd/d4e/classopenage_1_1util_1_1fslike_1_1_directory_1ac5f0417c9e573584edfedfe386f05c2f" kindref="member">basepath</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">}}}<sp/></highlight><highlight class="comment">//<sp/>openage::util::fslike</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/mnt/c/Users/Jameson/Desktop/git/openage-new-doc-system/libopenage/util/fslike/directory.cpp"/>
  </compounddef>
</doxygen>
