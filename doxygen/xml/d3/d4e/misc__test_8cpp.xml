<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d3/d4e/misc__test_8cpp" kind="file" language="C++">
    <compoundname>misc_test.cpp</compoundname>
    <includes refid="d4/d08/misc_8h" local="yes">misc.h</includes>
    <includes refid="db/d56/testing_8h" local="yes">../testing/testing.h</includes>
    <incdepgraph>
      <node id="31702">
        <label>list</label>
      </node>
      <node id="31693">
        <label>atomic</label>
      </node>
      <node id="31707">
        <label>../testing/testing.h</label>
        <link refid="db/d56/testing_8h"/>
        <childnode refid="31681" relation="include">
        </childnode>
      </node>
      <node id="31699">
        <label>iomanip</label>
      </node>
      <node id="31698">
        <label>functional</label>
      </node>
      <node id="31688">
        <label>cstdint</label>
      </node>
      <node id="31695">
        <label>externalsstream.h</label>
        <link refid="dc/dcf/externalsstream_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
      </node>
      <node id="31686">
        <label>signal.h</label>
        <link refid="d8/d39/signal_8h"/>
        <childnode refid="31686" relation="include">
        </childnode>
      </node>
      <node id="31673">
        <label>misc.h</label>
        <link refid="d4/d08/misc_8h"/>
        <childnode refid="31674" relation="include">
        </childnode>
        <childnode refid="31675" relation="include">
        </childnode>
        <childnode refid="31676" relation="include">
        </childnode>
        <childnode refid="31677" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31679" relation="include">
        </childnode>
        <childnode refid="31680" relation="include">
        </childnode>
        <childnode refid="31681" relation="include">
        </childnode>
        <childnode refid="31684" relation="include">
        </childnode>
      </node>
      <node id="31676">
        <label>cmath</label>
      </node>
      <node id="31683">
        <label>stdexcept</label>
      </node>
      <node id="31697">
        <label>cstdarg</label>
      </node>
      <node id="31678">
        <label>string</label>
      </node>
      <node id="31701">
        <label>logsink.h</label>
        <link refid="d3/d4e/logsink_8h"/>
        <childnode refid="31702" relation="include">
        </childnode>
        <childnode refid="31703" relation="include">
        </childnode>
        <childnode refid="31704" relation="include">
        </childnode>
      </node>
      <node id="31687">
        <label>../log/message.h</label>
        <link refid="d2/d0d/message_8h"/>
        <childnode refid="31688" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31689" relation="include">
        </childnode>
        <childnode refid="31690" relation="include">
        </childnode>
        <childnode refid="31692" relation="include">
        </childnode>
        <childnode refid="31701" relation="include">
        </childnode>
        <childnode refid="31704" relation="include">
        </childnode>
      </node>
      <node id="31675">
        <label>limits.h</label>
      </node>
      <node id="31705">
        <label>../util/enum.h</label>
        <link refid="d0/d9b/enum_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31706" relation="include">
        </childnode>
        <childnode refid="31684" relation="include">
        </childnode>
      </node>
      <node id="31706">
        <label>typeinfo</label>
      </node>
      <node id="31679">
        <label>vector</label>
      </node>
      <node id="31685">
        <label>ciso646</label>
      </node>
      <node id="31681">
        <label>../error/error.h</label>
        <link refid="d7/dce/error_2error_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31680" relation="include">
        </childnode>
        <childnode refid="31683" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31684" relation="include">
        </childnode>
        <childnode refid="31687" relation="include">
        </childnode>
      </node>
      <node id="31700">
        <label>sstream</label>
      </node>
      <node id="31684">
        <label>../util/compiler.h</label>
        <link refid="d4/dd1/compiler_8h"/>
        <childnode refid="31685" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31686" relation="include">
        </childnode>
      </node>
      <node id="31691">
        <label>cstdlib</label>
      </node>
      <node id="31704">
        <label>level.h</label>
        <link refid="de/d09/level_8h"/>
        <childnode refid="31705" relation="include">
        </childnode>
      </node>
      <node id="31682">
        <label>iostream</label>
      </node>
      <node id="31690">
        <label>../util/constexpr.h</label>
        <link refid="d1/d06/constexpr_8h"/>
        <childnode refid="31691" relation="include">
        </childnode>
      </node>
      <node id="31696">
        <label>strings.h</label>
        <link refid="d6/d90/strings_8h"/>
        <childnode refid="31697" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31699" relation="include">
        </childnode>
        <childnode refid="31680" relation="include">
        </childnode>
        <childnode refid="31700" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31679" relation="include">
        </childnode>
      </node>
      <node id="31672">
        <label>/mnt/c/Users/Jameson/Desktop/git/openage-new-doc-system/libopenage/util/misc_test.cpp</label>
        <link refid="d3/d4e/misc__test_8cpp"/>
        <childnode refid="31673" relation="include">
        </childnode>
        <childnode refid="31707" relation="include">
        </childnode>
      </node>
      <node id="31703">
        <label>mutex</label>
      </node>
      <node id="31692">
        <label>../util/stringformatter.h</label>
        <link refid="de/d65/stringformatter_8h"/>
        <childnode refid="31693" relation="include">
        </childnode>
        <childnode refid="31680" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31684" relation="include">
        </childnode>
        <childnode refid="31695" relation="include">
        </childnode>
        <childnode refid="31696" relation="include">
        </childnode>
      </node>
      <node id="31694">
        <label>type_traits</label>
      </node>
      <node id="31689">
        <label>config.h</label>
      </node>
      <node id="31674">
        <label>algorithm</label>
      </node>
      <node id="31677">
        <label>cstring</label>
      </node>
      <node id="31680">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="da/d23/namespaceopenage">openage</innernamespace>
    <innernamespace refid="de/d60/namespaceopenage_1_1util">openage::util</innernamespace>
    <innernamespace refid="d5/d3c/namespaceopenage_1_1util_1_1tests">openage::util::tests</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017-2017<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d08/misc_8h" kindref="compound">misc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../testing/testing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="da/d23/namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tests<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="d5/d3c/namespaceopenage_1_1util_1_1tests_1a48fcf768166ffb9362daf1fdf19acf45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d3c/namespaceopenage_1_1util_1_1tests_1a48fcf768166ffb9362daf1fdf19acf45" kindref="member">array_conversion</ref>()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>test_array8_big{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01,<sp/>0x23,<sp/>0x45,<sp/>0x67,<sp/>0x89,<sp/>0xab,<sp/>0xcd,<sp/>0xef</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>test_array8_little{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xef,<sp/>0xcd,<sp/>0xab,<sp/>0x89,<sp/>0x67,<sp/>0x45,<sp/>0x23,<sp/>0x01</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>test_uint64{0x0123456789abcdef};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Big-endian<sp/>conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1a69b6ecf2b5119f11c33d2b5b89cec86c" kindref="member">array8_to_uint64</ref>(test_array8_big.data(),<sp/>8,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>==<sp/>test_uint64<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1ae9d6c19aadc0f6a1d502f42852172de0" kindref="member">uint64_to_array8</ref>(test_uint64,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>==<sp/>test_array8_big<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Little-endian<sp/>conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1a69b6ecf2b5119f11c33d2b5b89cec86c" kindref="member">array8_to_uint64</ref>(test_array8_little.data(),<sp/>8,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>==<sp/>test_uint64<sp/>or<sp/>TESTFAIL;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1ae9d6c19aadc0f6a1d502f42852172de0" kindref="member">uint64_to_array8</ref>(test_uint64,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>==<sp/>test_array8_little<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>test_array8_big{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01,<sp/>0x23,<sp/>0x45,<sp/>0x67,<sp/>0x89,<sp/>0xab,<sp/>0xcd,<sp/>0xef,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf0,<sp/>0xf1,<sp/>0xf2,<sp/>0xf3,<sp/>0xf4,<sp/>0xf5,<sp/>0xf6,<sp/>0xf7</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>test_array8_little{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xef,<sp/>0xcd,<sp/>0xab,<sp/>0x89,<sp/>0x67,<sp/>0x45,<sp/>0x23,<sp/>0x01,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf7,<sp/>0xf6,<sp/>0xf5,<sp/>0xf4,<sp/>0xf3,<sp/>0xf2,<sp/>0xf1,<sp/>0xf0</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint64_t&gt;<sp/>test_array64{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0123456789abcdef,<sp/>0xf0f1f2f3f4f5f6f7</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Big-endian<sp/>conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1aa30219231e1ac7a89ef5d1fb44894e9e" kindref="member">array8_to_array64</ref>(test_array8_big.data(),<sp/>16,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>==<sp/>test_array64<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1af9f52b617e7434a421cd5f9de448b600" kindref="member">array64_to_array8</ref>(test_array64.data(),<sp/>2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>==<sp/>test_array8_big<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Little-endian<sp/>conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1aa30219231e1ac7a89ef5d1fb44894e9e" kindref="member">array8_to_array64</ref>(test_array8_little.data(),<sp/>16,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>==<sp/>test_array64<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1af9f52b617e7434a421cd5f9de448b600" kindref="member">array64_to_array8</ref>(test_array64.data(),<sp/>2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>==<sp/>test_array8_little<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>I&apos;m<sp/>converting<sp/>14<sp/>instead<sp/>of<sp/>16<sp/>bytes,<sp/>when<sp/>using<sp/>array8_to_array64<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>bytes<sp/>should<sp/>be<sp/>filled<sp/>with<sp/>zeroes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>test_array8_big{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01,<sp/>0x23,<sp/>0x45,<sp/>0x67,<sp/>0x89,<sp/>0xab,<sp/>0xcd,<sp/>0xef,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf0,<sp/>0xf1,<sp/>0xf2,<sp/>0xf3,<sp/>0xf4,<sp/>0xf5,<sp/>0x00,<sp/>0x00</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint64_t&gt;<sp/>test_array64_big{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0123456789abcdef,<sp/>0xf0f1f2f3f4f50000</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>test_array8_little{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01,<sp/>0x23,<sp/>0x45,<sp/>0x67,<sp/>0x89,<sp/>0xab,<sp/>0xcd,<sp/>0xef,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf7,<sp/>0xf6,<sp/>0xf5,<sp/>0xf4,<sp/>0xf3,<sp/>0xf2,<sp/>0x00,<sp/>0x00</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint64_t&gt;<sp/>test_array64_little{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xefcdab8967452301,<sp/>0x0000f2f3f4f5f6f7</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Big-endian<sp/>conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1aa30219231e1ac7a89ef5d1fb44894e9e" kindref="member">array8_to_array64</ref>(test_array8_big.data(),<sp/>14,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>==<sp/>test_array64_big<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1af9f52b617e7434a421cd5f9de448b600" kindref="member">array64_to_array8</ref>(test_array64_big.data(),<sp/>2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>==<sp/>test_array8_big<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Little-endian<sp/>conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1aa30219231e1ac7a89ef5d1fb44894e9e" kindref="member">array8_to_array64</ref>(test_array8_little.data(),<sp/>14,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>==<sp/>test_array64_little<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d60/namespaceopenage_1_1util_1af9f52b617e7434a421cd5f9de448b600" kindref="member">array64_to_array8</ref>(test_array64_little.data(),<sp/>2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>==<sp/>test_array8_little<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}}}<sp/></highlight><highlight class="comment">//<sp/>openage::util::tests</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/mnt/c/Users/Jameson/Desktop/git/openage-new-doc-system/libopenage/util/misc_test.cpp"/>
  </compounddef>
</doxygen>
