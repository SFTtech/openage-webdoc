<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d8/d09/enum__test_8cpp" kind="file" language="C++">
    <compoundname>enum_test.cpp</compoundname>
    <includes refid="d3/d7a/enum__test_8h" local="yes">enum_test.h</includes>
    <includes refid="db/d56/testing_8h" local="yes">../testing/testing.h</includes>
    <incdepgraph>
      <node id="29066">
        <label>list</label>
      </node>
      <node id="29056">
        <label>atomic</label>
      </node>
      <node id="29046">
        <label>../testing/testing.h</label>
        <link refid="db/d56/testing_8h"/>
        <childnode refid="29047" relation="include">
        </childnode>
      </node>
      <node id="29062">
        <label>iomanip</label>
      </node>
      <node id="29061">
        <label>functional</label>
      </node>
      <node id="29051">
        <label>cstdint</label>
      </node>
      <node id="29058">
        <label>externalsstream.h</label>
        <link refid="dc/dcf/externalsstream_8h"/>
        <childnode refid="29040" relation="include">
        </childnode>
        <childnode refid="29044" relation="include">
        </childnode>
      </node>
      <node id="29045">
        <label>signal.h</label>
        <link refid="d8/d39/signal_8h"/>
        <childnode refid="29045" relation="include">
        </childnode>
      </node>
      <node id="29037">
        <label>/mnt/c/Users/Jameson/Desktop/git/openage-new-doc-system/libopenage/util/enum_test.cpp</label>
        <link refid="d8/d09/enum__test_8cpp"/>
        <childnode refid="29038" relation="include">
        </childnode>
        <childnode refid="29046" relation="include">
        </childnode>
      </node>
      <node id="29049">
        <label>stdexcept</label>
      </node>
      <node id="29060">
        <label>cstdarg</label>
      </node>
      <node id="29044">
        <label>string</label>
      </node>
      <node id="29065">
        <label>logsink.h</label>
        <link refid="d3/d4e/logsink_8h"/>
        <childnode refid="29066" relation="include">
        </childnode>
        <childnode refid="29067" relation="include">
        </childnode>
        <childnode refid="29068" relation="include">
        </childnode>
      </node>
      <node id="29050">
        <label>../log/message.h</label>
        <link refid="d2/d0d/message_8h"/>
        <childnode refid="29051" relation="include">
        </childnode>
        <childnode refid="29044" relation="include">
        </childnode>
        <childnode refid="29052" relation="include">
        </childnode>
        <childnode refid="29053" relation="include">
        </childnode>
        <childnode refid="29055" relation="include">
        </childnode>
        <childnode refid="29065" relation="include">
        </childnode>
        <childnode refid="29068" relation="include">
        </childnode>
      </node>
      <node id="29039">
        <label>enum.h</label>
        <link refid="d0/d9b/enum_8h"/>
        <childnode refid="29040" relation="include">
        </childnode>
        <childnode refid="29041" relation="include">
        </childnode>
        <childnode refid="29042" relation="include">
        </childnode>
      </node>
      <node id="29041">
        <label>typeinfo</label>
      </node>
      <node id="29064">
        <label>vector</label>
      </node>
      <node id="29043">
        <label>ciso646</label>
      </node>
      <node id="29047">
        <label>../error/error.h</label>
        <link refid="d7/dce/error_2error_8h"/>
        <childnode refid="29040" relation="include">
        </childnode>
        <childnode refid="29048" relation="include">
        </childnode>
        <childnode refid="29049" relation="include">
        </childnode>
        <childnode refid="29044" relation="include">
        </childnode>
        <childnode refid="29042" relation="include">
        </childnode>
        <childnode refid="29050" relation="include">
        </childnode>
      </node>
      <node id="29063">
        <label>sstream</label>
      </node>
      <node id="29042">
        <label>compiler.h</label>
        <link refid="d4/dd1/compiler_8h"/>
        <childnode refid="29043" relation="include">
        </childnode>
        <childnode refid="29044" relation="include">
        </childnode>
        <childnode refid="29045" relation="include">
        </childnode>
      </node>
      <node id="29054">
        <label>cstdlib</label>
      </node>
      <node id="29068">
        <label>level.h</label>
        <link refid="de/d09/level_8h"/>
        <childnode refid="29039" relation="include">
        </childnode>
      </node>
      <node id="29040">
        <label>iostream</label>
      </node>
      <node id="29053">
        <label>../util/constexpr.h</label>
        <link refid="d1/d06/constexpr_8h"/>
        <childnode refid="29054" relation="include">
        </childnode>
      </node>
      <node id="29059">
        <label>strings.h</label>
        <link refid="d6/d90/strings_8h"/>
        <childnode refid="29060" relation="include">
        </childnode>
        <childnode refid="29061" relation="include">
        </childnode>
        <childnode refid="29062" relation="include">
        </childnode>
        <childnode refid="29048" relation="include">
        </childnode>
        <childnode refid="29063" relation="include">
        </childnode>
        <childnode refid="29044" relation="include">
        </childnode>
        <childnode refid="29064" relation="include">
        </childnode>
      </node>
      <node id="29067">
        <label>mutex</label>
      </node>
      <node id="29055">
        <label>../util/stringformatter.h</label>
        <link refid="de/d65/stringformatter_8h"/>
        <childnode refid="29056" relation="include">
        </childnode>
        <childnode refid="29048" relation="include">
        </childnode>
        <childnode refid="29057" relation="include">
        </childnode>
        <childnode refid="29042" relation="include">
        </childnode>
        <childnode refid="29058" relation="include">
        </childnode>
        <childnode refid="29059" relation="include">
        </childnode>
      </node>
      <node id="29057">
        <label>type_traits</label>
      </node>
      <node id="29052">
        <label>config.h</label>
      </node>
      <node id="29048">
        <label>memory</label>
      </node>
      <node id="29038">
        <label>enum_test.h</label>
        <link refid="d3/d7a/enum__test_8h"/>
        <childnode refid="29039" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="da/d23/namespaceopenage">openage</innernamespace>
    <innernamespace refid="de/d60/namespaceopenage_1_1util">openage::util</innernamespace>
    <innernamespace refid="d5/d3c/namespaceopenage_1_1util_1_1tests">openage::util::tests</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2018<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/d7a/enum__test_8h" kindref="compound">enum_test.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../testing/testing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="da/d23/namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tests<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="d5/d3c/namespaceopenage_1_1util_1_1tests_1a6f54051ead3baf22b21d6142f78cbbc3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="df/d4b/structopenage_1_1util_1_1tests_1_1testenum__value" kindref="compound">testenum_value</ref><sp/><ref refid="d5/d3c/namespaceopenage_1_1util_1_1tests_1a6f54051ead3baf22b21d6142f78cbbc3" kindref="member">undefined</ref><sp/>{{</highlight><highlight class="stringliteral">&quot;UNDEFINED&quot;</highlight><highlight class="normal">,<sp/>0},<sp/></highlight><highlight class="stringliteral">&quot;undefined<sp/>test<sp/>string&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="13" refid="dd/dea/structopenage_1_1util_1_1tests_1_1testenum_1a710bdc0435bf9ead133a05fdbf7c092e" refkind="member"><highlight class="normal"><ref refid="dd/dea/structopenage_1_1util_1_1tests_1_1testenum_1a710bdc0435bf9ead133a05fdbf7c092e" kindref="member">testenum::testenum</ref>()<sp/>:<sp/><ref refid="d0/da2/classopenage_1_1util_1_1_enum" kindref="compound">Enum</ref>{<ref refid="d5/d3c/namespaceopenage_1_1util_1_1tests_1a6f54051ead3baf22b21d6142f78cbbc3" kindref="member">undefined</ref>}<sp/>{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="d5/d3c/namespaceopenage_1_1util_1_1tests_1a8204af61a6e9e5a470475054b1536357" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d3c/namespaceopenage_1_1util_1_1tests_1a8204af61a6e9e5a470475054b1536357" kindref="member">enum_</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/dea/structopenage_1_1util_1_1tests_1_1testenum" kindref="compound">testenum</ref><sp/>tv0<sp/>=<sp/><ref refid="dd/dea/structopenage_1_1util_1_1tests_1_1testenum_1afbb125ce389d27f805fbc94c6a14b3b7" kindref="member">testenum::foo</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>tv0<sp/>==<sp/><ref refid="dd/dea/structopenage_1_1util_1_1tests_1_1testenum_1afbb125ce389d27f805fbc94c6a14b3b7" kindref="member">testenum::foo</ref><sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>tv0<sp/>!=<sp/><ref refid="dd/dea/structopenage_1_1util_1_1tests_1_1testenum_1a1aa6f28caad69a1248f8aca6aa57b324" kindref="member">testenum::bar</ref><sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/dea/structopenage_1_1util_1_1tests_1_1testenum" kindref="compound">testenum</ref><sp/>tv1<sp/>=<sp/><ref refid="dd/dea/structopenage_1_1util_1_1tests_1_1testenum_1a1aa6f28caad69a1248f8aca6aa57b324" kindref="member">testenum::bar</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>tv0<sp/>==<sp/>tv1<sp/>and<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>tv1<sp/>=<sp/><ref refid="dd/dea/structopenage_1_1util_1_1tests_1_1testenum_1afbb125ce389d27f805fbc94c6a14b3b7" kindref="member">testenum::foo</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>tv0<sp/>==<sp/>tv1<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>tv0<sp/>!=<sp/>tv1<sp/>and<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d56/testing_8h_1a57b089ad5d574fad716e3b140c80d0e5" kindref="member">TESTEQUALS</ref>(tv0-&gt;get_stuff(),<sp/>std::string(</highlight><highlight class="stringliteral">&quot;foooooooooooooooooo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d56/testing_8h_1a57b089ad5d574fad716e3b140c80d0e5" kindref="member">TESTEQUALS</ref>(tv0-&gt;stuff,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;foooooooooooooooooo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;default<sp/>value&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/dea/structopenage_1_1util_1_1tests_1_1testenum" kindref="compound">testenum</ref><sp/>tv2;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d56/testing_8h_1a57b089ad5d574fad716e3b140c80d0e5" kindref="member">TESTEQUALS</ref>(tv2-&gt;stuff,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;undefined<sp/>test<sp/>string&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>tv2<sp/>!=<sp/>tv0<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>tv2<sp/>!=<sp/>tv1<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>tv2<sp/>==<sp/>tv2<sp/>or<sp/><ref refid="db/d56/testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d5d/classopenage_1_1util_1_1_f_string" kindref="compound">FString</ref><sp/>fstr;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>fstr<sp/>&lt;&lt;<sp/>tv0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d56/testing_8h_1a57b089ad5d574fad716e3b140c80d0e5" kindref="member">TESTEQUALS</ref>(fstr.<ref refid="d3/d5d/classopenage_1_1util_1_1_f_string_1a34dbd8aadeb4700b5fa150344867f474" kindref="member">buffer</ref>,<sp/></highlight><highlight class="stringliteral">&quot;openage::util::tests::testenum_value::foo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>fstr.reset();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>fstr<sp/>&lt;&lt;<sp/>tv2;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d56/testing_8h_1a57b089ad5d574fad716e3b140c80d0e5" kindref="member">TESTEQUALS</ref>(fstr.<ref refid="d3/d5d/classopenage_1_1util_1_1_f_string_1a34dbd8aadeb4700b5fa150344867f474" kindref="member">buffer</ref>,<sp/></highlight><highlight class="stringliteral">&quot;openage::util::tests::testenum_value::UNDEFINED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}}}<sp/></highlight><highlight class="comment">//<sp/>openage::util::tests</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/mnt/c/Users/Jameson/Desktop/git/openage-new-doc-system/libopenage/util/enum_test.cpp"/>
  </compounddef>
</doxygen>
