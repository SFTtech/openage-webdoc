<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage.convert.dataformat.generated_file.GeneratedFile Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen_custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">v0.4.0</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="../../d3/d78/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage.convert.dataformat.generated_file.GeneratedFile Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>represents a writable file that was generated automatically.  
 <a href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#details">More...</a></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Collaboration diagram for openage.convert.dataformat.generated_file.GeneratedFile:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d9/d50/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file__coll__graph.svg" width="256" height="323"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aca0798e335bb1af131dc172dfa3957a6"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#aca0798e335bb1af131dc172dfa3957a6">namespacify</a> (cls, var_type)</td></tr>
<tr class="separator:aca0798e335bb1af131dc172dfa3957a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6e3f9f22dad619d3b2202e060539904"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#ab6e3f9f22dad619d3b2202e060539904">__init__</a> (self, <a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a0712668513c20ee009a5f1dfbdd2558a">file_name</a>, <a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a5d0c53827f43a1378de3cc4d31b8ed22">format_</a>)</td></tr>
<tr class="separator:ab6e3f9f22dad619d3b2202e060539904"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a066f78e6d40708f497833c4280a75217"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a066f78e6d40708f497833c4280a75217">add_snippet</a> (self, snippet, inherit_typedefs=True)</td></tr>
<tr class="separator:a066f78e6d40708f497833c4280a75217"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04eade25083ec6a497f465c0e4675508"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a04eade25083ec6a497f465c0e4675508">get_include_snippet</a> (self, <a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a0712668513c20ee009a5f1dfbdd2558a">file_name</a>=True)</td></tr>
<tr class="memdesc:a04eade25083ec6a497f465c0e4675508"><td class="mdescLeft">&#160;</td><td class="mdescRight">return a snippet with a header entry for this file to be able to include it.  <a href="#a04eade25083ec6a497f465c0e4675508">More...</a><br /></td></tr>
<tr class="separator:a04eade25083ec6a497f465c0e4675508"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37aae935de963e1abdb6f501c6e75076"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a37aae935de963e1abdb6f501c6e75076">create_xref_headers</a> (self, file_pool)</td></tr>
<tr class="memdesc:a37aae935de963e1abdb6f501c6e75076"><td class="mdescLeft">&#160;</td><td class="mdescRight">discover and add needed header snippets for type references accross files.  <a href="#a37aae935de963e1abdb6f501c6e75076">More...</a><br /></td></tr>
<tr class="separator:a37aae935de963e1abdb6f501c6e75076"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa99235f1e4f21d5c57e7e95da321b33e"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#aa99235f1e4f21d5c57e7e95da321b33e">create_forward_declarations</a> (self, file_pool)</td></tr>
<tr class="memdesc:aa99235f1e4f21d5c57e7e95da321b33e"><td class="mdescLeft">&#160;</td><td class="mdescRight">create forward declarations for this generated file.  <a href="#aa99235f1e4f21d5c57e7e95da321b33e">More...</a><br /></td></tr>
<tr class="separator:aa99235f1e4f21d5c57e7e95da321b33e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1e3e3ba7c5728c42f2c8d9619a93e7a"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#ad1e3e3ba7c5728c42f2c8d9619a93e7a">generate</a> (self)</td></tr>
<tr class="memdesc:ad1e3e3ba7c5728c42f2c8d9619a93e7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">actually generate the content for this file.  <a href="#ad1e3e3ba7c5728c42f2c8d9619a93e7a">More...</a><br /></td></tr>
<tr class="separator:ad1e3e3ba7c5728c42f2c8d9619a93e7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ee4f758fdcdce9c8e9d22406d1865d9"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a2ee4f758fdcdce9c8e9d22406d1865d9">__repr__</a> (self)</td></tr>
<tr class="separator:a2ee4f758fdcdce9c8e9d22406d1865d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a47be248058b8a58d86be245676073e19"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a47be248058b8a58d86be245676073e19">snippets</a></td></tr>
<tr class="separator:a47be248058b8a58d86be245676073e19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97457c65f7f41e262176d22b099c6126"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a97457c65f7f41e262176d22b099c6126">typedefs</a></td></tr>
<tr class="separator:a97457c65f7f41e262176d22b099c6126"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a160d2930b05acfa392333022dd8310"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a9a160d2930b05acfa392333022dd8310">typerefs</a></td></tr>
<tr class="separator:a9a160d2930b05acfa392333022dd8310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0712668513c20ee009a5f1dfbdd2558a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a0712668513c20ee009a5f1dfbdd2558a">file_name</a></td></tr>
<tr class="separator:a0712668513c20ee009a5f1dfbdd2558a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d0c53827f43a1378de3cc4d31b8ed22"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a5d0c53827f43a1378de3cc4d31b8ed22">format_</a></td></tr>
<tr class="separator:a5d0c53827f43a1378de3cc4d31b8ed22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57b986d9e3dc7dd47c2d0bce2f4c9ba9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a57b986d9e3dc7dd47c2d0bce2f4c9ba9">included_typedefs</a></td></tr>
<tr class="separator:a57b986d9e3dc7dd47c2d0bce2f4c9ba9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:adade02a07e45d832cd7f02ab0bbba325"><td class="memItemLeft" align="right" valign="top">tuple&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#adade02a07e45d832cd7f02ab0bbba325">namespaces</a> = (&quot;openage&quot;, &quot;gamedata&quot;)</td></tr>
<tr class="separator:adade02a07e45d832cd7f02ab0bbba325"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ffd3d8a611c4f3c35fe6a9aa5a70443"><td class="memItemLeft" align="right" valign="top">dictionary&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a3ffd3d8a611c4f3c35fe6a9aa5a70443">default_preferences</a></td></tr>
<tr class="separator:a3ffd3d8a611c4f3c35fe6a9aa5a70443"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22fe1959583948bbcb76cd7c55341154"><td class="memItemLeft" align="right" valign="top">dictionary&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a22fe1959583948bbcb76cd7c55341154">output_preferences</a></td></tr>
<tr class="separator:a22fe1959583948bbcb76cd7c55341154"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>represents a writable file that was generated automatically. </p>
<p>it's filled by many ContentSnippets before its contents are generated. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00016">16</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab6e3f9f22dad619d3b2202e060539904"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6e3f9f22dad619d3b2202e060539904">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.generated_file.GeneratedFile.__init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>file_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>format_</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00074">74</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">def </span>__init__(self, file_name, format_):</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        self.snippets  = set()</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        self.typedefs  = set()</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        self.typerefs  = set()</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        self.file_name = file_name</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        self.format_   = format_</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        self.included_typedefs = set()</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a2ee4f758fdcdce9c8e9d22406d1865d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ee4f758fdcdce9c8e9d22406d1865d9">&#9670;&nbsp;</a></span>__repr__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.generated_file.GeneratedFile.__repr__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00240">240</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">References <a class="el" href="../../d4/dd6/content__snippet_8py_source.xhtml#l00028">openage.convert.dataformat.content_snippet.ContentSnippet.file_name</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00078">openage.convert.dataformat.generated_file.GeneratedFile.file_name</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00079">openage.convert.dataformat.generated_file.GeneratedFile.format_</a>.</p>
<div class="fragment"><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keyword">def </span>__repr__(self):</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;GeneratedFile&lt;%s&gt;(file_name=%s)&quot;</span> % (self.format_, self.file_name)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><!-- fragment -->
</div>
</div>
<a id="a066f78e6d40708f497833c4280a75217"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a066f78e6d40708f497833c4280a75217">&#9670;&nbsp;</a></span>add_snippet()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.generated_file.GeneratedFile.add_snippet </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>snippet</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>inherit_typedefs</em> = <code>True</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00082">82</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">References <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00082">openage.convert.dataformat.generated_file.GeneratedFile.add_snippet()</a>, <a class="el" href="../../d4/dd6/content__snippet_8py_source.xhtml#l00028">openage.convert.dataformat.content_snippet.ContentSnippet.file_name</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00078">openage.convert.dataformat.generated_file.GeneratedFile.file_name</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00080">openage.convert.dataformat.generated_file.GeneratedFile.included_typedefs</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00075">openage.convert.dataformat.generated_file.GeneratedFile.snippets</a>, <a class="el" href="../../d4/dd6/content__snippet_8py_source.xhtml#l00030">openage.convert.dataformat.content_snippet.ContentSnippet.typedefs</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00076">openage.convert.dataformat.generated_file.GeneratedFile.typedefs</a>, <a class="el" href="../../d2/d83/data__formatter_8py_source.xhtml#l00118">openage.convert.dataformat.data_formatter.DataFormatter.typedefs</a>, <a class="el" href="../../d0/df2/entry__parser_8py_source.xhtml#l00025">openage.convert.dataformat.entry_parser.EntryParser.typerefs</a>, <a class="el" href="../../d4/dd6/content__snippet_8py_source.xhtml#l00029">openage.convert.dataformat.content_snippet.ContentSnippet.typerefs</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00077">openage.convert.dataformat.generated_file.GeneratedFile.typerefs</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00082">openage.convert.dataformat.generated_file.GeneratedFile.add_snippet()</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00121">openage.convert.dataformat.generated_file.GeneratedFile.create_xref_headers()</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">def </span>add_snippet(self, snippet, inherit_typedefs=True):</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(snippet, ContentSnippet):</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;only ContentSnippets can be added to generated files, &quot;</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                            <span class="stringliteral">&quot;tried %s&quot;</span> % type(snippet))</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> snippet.file_name == self.file_name <span class="keywordflow">and</span> <span class="keywordflow">not</span> snippet.file_name:</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;only snippets with the same target file_name &quot;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                            <span class="stringliteral">&quot;can be put into the same generated file.&quot;</span>)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">if</span> snippet <span class="keywordflow">not</span> <span class="keywordflow">in</span> (self.snippets):</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            self.snippets.add(snippet)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">if</span> inherit_typedefs:</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                self.typedefs |= snippet.typedefs</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                self.typerefs |= snippet.typerefs</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                self.included_typedefs |= snippet.typedefs</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="comment"># add all included snippets, namely HeaderSnippets for #include lol.h</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">for</span> s <span class="keywordflow">in</span> snippet.includes:</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                self.add_snippet(s, inherit_typedefs=<span class="keyword">False</span>)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div></div><!-- fragment --><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_a066f78e6d40708f497833c4280a75217_cgraph.svg" width="256" height="76"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="../../closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_a066f78e6d40708f497833c4280a75217_icgraph.svg" width="558" height="76"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa99235f1e4f21d5c57e7e95da321b33e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa99235f1e4f21d5c57e7e95da321b33e">&#9670;&nbsp;</a></span>create_forward_declarations()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.generated_file.GeneratedFile.create_forward_declarations </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>file_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>create forward declarations for this generated file. </p>
<p>a forward declatation is needed when a referenced type is defined in an included header, that includes a header that includes the first one. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00144">144</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="stringliteral"></span></div><span class="stringliteral"></div><!-- fragment -->
</div>
</div>
<a id="a37aae935de963e1abdb6f501c6e75076"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37aae935de963e1abdb6f501c6e75076">&#9670;&nbsp;</a></span>create_xref_headers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.generated_file.GeneratedFile.create_xref_headers </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>file_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>discover and add needed header snippets for type references accross files. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00121">121</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">References <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00082">openage.convert.dataformat.generated_file.GeneratedFile.add_snippet()</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00080">openage.convert.dataformat.generated_file.GeneratedFile.included_typedefs</a>, <a class="el" href="../../d4/dd6/content__snippet_8py_source.xhtml#l00030">openage.convert.dataformat.content_snippet.ContentSnippet.typedefs</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00076">openage.convert.dataformat.generated_file.GeneratedFile.typedefs</a>, <a class="el" href="../../d2/d83/data__formatter_8py_source.xhtml#l00118">openage.convert.dataformat.data_formatter.DataFormatter.typedefs</a>, <a class="el" href="../../d0/df2/entry__parser_8py_source.xhtml#l00025">openage.convert.dataformat.entry_parser.EntryParser.typerefs</a>, <a class="el" href="../../d4/dd6/content__snippet_8py_source.xhtml#l00029">openage.convert.dataformat.content_snippet.ContentSnippet.typerefs</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00077">openage.convert.dataformat.generated_file.GeneratedFile.typerefs</a>.</p>
<div class="fragment"><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="stringliteral">        new_resolves = set()</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="stringliteral">        for include_candidate in file_pool:</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral">            candidate_resolves = include_candidate.typedefs &amp; (self.typerefs - self.typedefs)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral">            if len(candidate_resolves) &gt; 0:</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">                new_header = include_candidate.get_include_snippet()</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="stringliteral">                self.add_snippet(new_header, inherit_typedefs=False)</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="stringliteral">                new_resolves |= candidate_resolves</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="stringliteral">        still_missing = ((self.typerefs - self.typedefs) - self.included_typedefs) - new_resolves</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="stringliteral">        if len(still_missing) &gt; 0:</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="stringliteral">            raise Exception(&quot;still missing types for %s:\n%s&quot; % (self, still_missing))</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="stringliteral"></span></div><span class="stringliteral"></div><!-- fragment --><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_a37aae935de963e1abdb6f501c6e75076_cgraph.svg" width="558" height="76"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad1e3e3ba7c5728c42f2c8d9619a93e7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1e3e3ba7c5728c42f2c8d9619a93e7a">&#9670;&nbsp;</a></span>generate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.generated_file.GeneratedFile.generate </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>actually generate the content for this file. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00149">149</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">References <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00025">openage.convert.dataformat.generated_file.GeneratedFile.default_preferences</a>, <a class="el" href="../../d4/dd6/content__snippet_8py_source.xhtml#l00028">openage.convert.dataformat.content_snippet.ContentSnippet.file_name</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00078">openage.convert.dataformat.generated_file.GeneratedFile.file_name</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00079">openage.convert.dataformat.generated_file.GeneratedFile.format_</a>, <a class="el" href="../../d0/dee/pyobject_8cpp_source.xhtml#l00359">openage::py.list()</a>, <a class="el" href="../../db/dfa/cpp__testlist_8py_source.xhtml#l00018">openage.codegen.cpp_testlist.Namespace.namespaces</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00018">openage.convert.dataformat.generated_file.GeneratedFile.namespaces</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00035">openage.convert.dataformat.generated_file.GeneratedFile.output_preferences</a>, <a class="el" href="../../da/df6/repr_8cpp_source.xhtml#l00012">openage::util.repr()</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00075">openage.convert.dataformat.generated_file.GeneratedFile.snippets</a>.</p>
<div class="fragment"><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="stringliteral">        # TODO: create new snippets for resolving cyclic dependencies (forward declarations)</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="stringliteral">        # apply preference overrides</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="stringliteral">        prefs = self.default_preferences.copy()</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="stringliteral">        prefs.update(self.output_preferences[self.format_])</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="stringliteral">        # if there is no need for sorting and resolving dependencies, just return the snippets</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="stringliteral">        # as they have been added</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="stringliteral">        if not prefs[&quot;process&quot;]:</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="stringliteral">            file_data = &quot;\n&quot;.join(snippet.get_data() for snippet in self.snippets)</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="stringliteral">            return prefs[&quot;folder&quot;] + &#39;/&#39; + self.file_name + prefs[&quot;file_suffix&quot;], file_data</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="stringliteral">        snippets_header = {s for s in self.snippets if s.section == SectionType.section_header}</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="stringliteral">        snippets_body   = self.snippets - snippets_header</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="stringliteral">        if len(snippets_body) == 0:</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="stringliteral">            raise Exception(&quot;generated file %s has no body snippets!&quot; % (repr(self)))</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="stringliteral">        # type references in this file that could not be resolved</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="stringliteral">        missing_types = set()</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="stringliteral">        # put snippets into list in correct order</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="stringliteral">        # snippets will be written according to this [(snippet, prio), ...] list</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="stringliteral">        snippets_priorized = list()</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="stringliteral">        # determine each snippet&#39;s priority by number of type references and definitions</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="stringliteral">        # smaller prio means written earlier in the file.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="stringliteral">        # also, find snippet dependencies</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="stringliteral">        for s in sorted(snippets_body):</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="stringliteral">            snippet_prio = len(s.typerefs) - len(s.typedefs)</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="stringliteral">            snippets_priorized.append((s, snippet_prio))</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="stringliteral">            # let each snippet find others as dependencies</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="stringliteral">            missing_types |= s.add_required_snippets(self.snippets)</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="stringliteral">        if len(missing_types) &gt; 0:</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="stringliteral">            import pprint</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="stringliteral">            raise Exception(&quot;missing types for %s:\n%s&quot; % (repr(self), pprint.pformat(missing_types)))</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="stringliteral">        # sort snippets according to their priority determined above</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="stringliteral">        snippets_priorized_sorted = sorted(snippets_priorized, key=lambda s: s[1])</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="stringliteral">        # create list of snippets to be put in the generated file.</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="stringliteral">        # [(snippet, prio)]</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="stringliteral">        snippets_body_sorted = list()</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="stringliteral">        snippets_body_set = set()</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="stringliteral">        # fetch list of all required snippets for all snippets to put in the file</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="stringliteral">        for snippet, _ in snippets_priorized_sorted:</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="stringliteral">            snippet_candidates = snippet.get_required_snippets()</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="stringliteral">            for s in snippet_candidates:</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="stringliteral">                if s.section == SectionType.section_header:</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="stringliteral">                    if s not in snippets_header:</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="stringliteral">                        snippets_header.add(s)</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="stringliteral">                        continue</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="stringliteral">                elif s.section == SectionType.section_body:</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="stringliteral">                    if s not in snippets_body_set:</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="stringliteral">                        snippets_body_sorted.append(s)</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="stringliteral">                        snippets_body_set.add(s)</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="stringliteral">                        continue</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="stringliteral">        # these snippets will be written outside the namespace</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="stringliteral">        # in the #include section</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="stringliteral">        snippets_header_sorted = sorted(snippets_header, key=lambda h: (not h.is_global, h.name))</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="stringliteral">        # merge file contents</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="stringliteral">        header_data = &quot;&quot;.join(header.get_data() for header in snippets_header_sorted)</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="stringliteral">        file_data   = &quot;\n&quot;.join(snippet.get_data() for snippet in snippets_body_sorted)</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="stringliteral">        # fill file header and footer with the generated file_name</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="stringliteral">        content_prefix = prefs[&quot;content_prefix&quot;].substitute(</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="stringliteral">            headers=header_data,</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="stringliteral">            opennamespaces=&quot;\n&quot;.join([&quot;namespace %s {&quot; % spc</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="stringliteral">                                      for spc in self.namespaces]),</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="stringliteral">        )</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="stringliteral">        content_suffix = prefs[&quot;content_suffix&quot;].substitute(</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="stringliteral">            closenamespaces=&quot;\n&quot;.join([&quot;} // %s&quot; % spc</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="stringliteral">                                       for spc in reversed(self.namespaces)]),</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="stringliteral">        )</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="stringliteral">        # this is the final file content</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="stringliteral">        file_data = &quot;&quot;.join((content_prefix, file_data, content_suffix))</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="stringliteral">        # whee, return (file_name, content)</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="stringliteral">        return prefs[&quot;folder&quot;] + &#39;/&#39; + self.file_name + prefs[&quot;file_suffix&quot;], file_data</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="stringliteral"></span></div><span class="stringliteral"></div><!-- fragment --><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_ad1e3e3ba7c5728c42f2c8d9619a93e7a_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a04eade25083ec6a497f465c0e4675508"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04eade25083ec6a497f465c0e4675508">&#9670;&nbsp;</a></span>get_include_snippet()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.generated_file.GeneratedFile.get_include_snippet </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>file_name</em> = <code>True</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>return a snippet with a header entry for this file to be able to include it. </p>

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00107">107</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">References <a class="el" href="../../d4/dd6/content__snippet_8py_source.xhtml#l00028">openage.convert.dataformat.content_snippet.ContentSnippet.file_name</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00078">openage.convert.dataformat.generated_file.GeneratedFile.file_name</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00079">openage.convert.dataformat.generated_file.GeneratedFile.format_</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00035">openage.convert.dataformat.generated_file.GeneratedFile.output_preferences</a>, <a class="el" href="../../d4/dd6/content__snippet_8py_source.xhtml#l00030">openage.convert.dataformat.content_snippet.ContentSnippet.typedefs</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00076">openage.convert.dataformat.generated_file.GeneratedFile.typedefs</a>, and <a class="el" href="../../d2/d83/data__formatter_8py_source.xhtml#l00118">openage.convert.dataformat.data_formatter.DataFormatter.typedefs</a>.</p>
<div class="fragment"><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">        ret = HeaderSnippet(</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">            self.file_name + self.output_preferences[self.format_][&quot;file_suffix&quot;],</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">            file_name=file_name,</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral">            is_global=False,</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="stringliteral">        )</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="stringliteral">        ret.typedefs |= self.typedefs</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="stringliteral">        return ret</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="stringliteral"></span></div><span class="stringliteral"></div><!-- fragment -->
</div>
</div>
<a id="aca0798e335bb1af131dc172dfa3957a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca0798e335bb1af131dc172dfa3957a6">&#9670;&nbsp;</a></span>namespacify()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.generated_file.GeneratedFile.namespacify </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>cls</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>var_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00021">21</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">References <a class="el" href="../../db/dfa/cpp__testlist_8py_source.xhtml#l00018">openage.codegen.cpp_testlist.Namespace.namespaces</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00018">openage.convert.dataformat.generated_file.GeneratedFile.namespaces</a>.</p>
<div class="fragment"><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keyword">def </span>namespacify(cls, var_type):</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;%s::%s&quot;</span> % (<span class="stringliteral">&quot;::&quot;</span>.join(cls.namespaces), var_type)</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a3ffd3d8a611c4f3c35fe6a9aa5a70443"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ffd3d8a611c4f3c35fe6a9aa5a70443">&#9670;&nbsp;</a></span>default_preferences</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">dictionary openage.convert.dataformat.generated_file.GeneratedFile.default_preferences</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">=  {</div><div class="line">        <span class="stringliteral">&quot;folder&quot;</span>:         <span class="stringliteral">&quot;&quot;</span>,</div><div class="line">        <span class="stringliteral">&quot;file_suffix&quot;</span>:    <span class="stringliteral">&quot;&quot;</span>,</div><div class="line">        <span class="stringliteral">&quot;process&quot;</span>:        <span class="keyword">True</span>,</div><div class="line">        <span class="stringliteral">&quot;content_prefix&quot;</span>: Template(<span class="stringliteral">&quot;&quot;</span>),</div><div class="line">        <span class="stringliteral">&quot;content_suffix&quot;</span>: Template(<span class="stringliteral">&quot;&quot;</span>),</div><div class="line">    }</div></div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00025">25</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00149">openage.convert.dataformat.generated_file.GeneratedFile.generate()</a>.</p>

</div>
</div>
<a id="a0712668513c20ee009a5f1dfbdd2558a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0712668513c20ee009a5f1dfbdd2558a">&#9670;&nbsp;</a></span>file_name</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.generated_file.GeneratedFile.file_name</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00078">78</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00240">openage.convert.dataformat.generated_file.GeneratedFile.__repr__()</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00082">openage.convert.dataformat.generated_file.GeneratedFile.add_snippet()</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00149">openage.convert.dataformat.generated_file.GeneratedFile.generate()</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00107">openage.convert.dataformat.generated_file.GeneratedFile.get_include_snippet()</a>, <a class="el" href="../../de/d1a/members_8py_source.xhtml#l00444">openage.convert.dataformat.members.EnumMember.get_snippets()</a>, and <a class="el" href="../../de/d1a/members_8py_source.xhtml#l00661">openage.convert.dataformat.members.MultisubtypeMember.get_snippets()</a>.</p>

</div>
</div>
<a id="a5d0c53827f43a1378de3cc4d31b8ed22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d0c53827f43a1378de3cc4d31b8ed22">&#9670;&nbsp;</a></span>format_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.generated_file.GeneratedFile.format_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00079">79</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00240">openage.convert.dataformat.generated_file.GeneratedFile.__repr__()</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00149">openage.convert.dataformat.generated_file.GeneratedFile.generate()</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00107">openage.convert.dataformat.generated_file.GeneratedFile.get_include_snippet()</a>.</p>

</div>
</div>
<a id="a57b986d9e3dc7dd47c2d0bce2f4c9ba9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57b986d9e3dc7dd47c2d0bce2f4c9ba9">&#9670;&nbsp;</a></span>included_typedefs</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.generated_file.GeneratedFile.included_typedefs</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00080">80</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00082">openage.convert.dataformat.generated_file.GeneratedFile.add_snippet()</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00121">openage.convert.dataformat.generated_file.GeneratedFile.create_xref_headers()</a>.</p>

</div>
</div>
<a id="adade02a07e45d832cd7f02ab0bbba325"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adade02a07e45d832cd7f02ab0bbba325">&#9670;&nbsp;</a></span>namespaces</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">tuple openage.convert.dataformat.generated_file.GeneratedFile.namespaces = (&quot;openage&quot;, &quot;gamedata&quot;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00018">18</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00149">openage.convert.dataformat.generated_file.GeneratedFile.generate()</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00021">openage.convert.dataformat.generated_file.GeneratedFile.namespacify()</a>.</p>

</div>
</div>
<a id="a22fe1959583948bbcb76cd7c55341154"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22fe1959583948bbcb76cd7c55341154">&#9670;&nbsp;</a></span>output_preferences</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">dictionary openage.convert.dataformat.generated_file.GeneratedFile.output_preferences</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00035">35</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00149">openage.convert.dataformat.generated_file.GeneratedFile.generate()</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00107">openage.convert.dataformat.generated_file.GeneratedFile.get_include_snippet()</a>.</p>

</div>
</div>
<a id="a47be248058b8a58d86be245676073e19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47be248058b8a58d86be245676073e19">&#9670;&nbsp;</a></span>snippets</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.generated_file.GeneratedFile.snippets</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00075">75</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00082">openage.convert.dataformat.generated_file.GeneratedFile.add_snippet()</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00149">openage.convert.dataformat.generated_file.GeneratedFile.generate()</a>.</p>

</div>
</div>
<a id="a97457c65f7f41e262176d22b099c6126"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97457c65f7f41e262176d22b099c6126">&#9670;&nbsp;</a></span>typedefs</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.generated_file.GeneratedFile.typedefs</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00076">76</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00082">openage.convert.dataformat.generated_file.GeneratedFile.add_snippet()</a>, <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00121">openage.convert.dataformat.generated_file.GeneratedFile.create_xref_headers()</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00107">openage.convert.dataformat.generated_file.GeneratedFile.get_include_snippet()</a>.</p>

</div>
</div>
<a id="a9a160d2930b05acfa392333022dd8310"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a160d2930b05acfa392333022dd8310">&#9670;&nbsp;</a></span>typerefs</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.generated_file.GeneratedFile.typerefs</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00077">77</a> of file <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00082">openage.convert.dataformat.generated_file.GeneratedFile.add_snippet()</a>, and <a class="el" href="../../df/d4b/generated__file_8py_source.xhtml#l00121">openage.convert.dataformat.generated_file.GeneratedFile.create_xref_headers()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/mnt/c/Users/Jameson/Desktop/git/openage-new-doc-system/openage/convert/dataformat/<a class="el" href="../../df/d4b/generated__file_8py_source.xhtml">generated_file.py</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/d23/namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="../../d2/d78/namespaceopenage_1_1convert.xhtml">convert</a></li><li class="navelem"><a class="el" href="../../df/d58/namespaceopenage_1_1convert_1_1dataformat.xhtml">dataformat</a></li><li class="navelem"><a class="el" href="../../d3/dee/namespaceopenage_1_1convert_1_1dataformat_1_1generated__file.xhtml">generated_file</a></li><li class="navelem"><a class="el" href="../../df/d12/classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml">GeneratedFile</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
