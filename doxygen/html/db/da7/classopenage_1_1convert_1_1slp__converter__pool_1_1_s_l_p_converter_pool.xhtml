<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage.convert.slp_converter_pool.SLPConverterPool Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen_custom.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">v0.4.0</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../dd/db8/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage.convert.slp_converter_pool.SLPConverterPool Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Multiprocessing-based pool of SLP converter processes.  
 <a href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#details">More...</a></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Collaboration diagram for openage.convert.slp_converter_pool.SLPConverterPool:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../de/de9/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool__coll__graph.svg" width="238" height="220"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a23af83e63aa7db225c65bc947cb7ad3c"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a23af83e63aa7db225c65bc947cb7ad3c">__init__</a> (self, <a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#ab8cdaf7c309255571f22a4a494543d1a">palette</a>, jobs=None)</td></tr>
<tr class="separator:a23af83e63aa7db225c65bc947cb7ad3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a157e465a75a721fa7b2f805ff57c4d5f"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a157e465a75a721fa7b2f805ff57c4d5f">close</a> (self)</td></tr>
<tr class="memdesc:a157e465a75a721fa7b2f805ff57c4d5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Closes the converter pool, quitting all the processes.  <a href="#a157e465a75a721fa7b2f805ff57c4d5f">More...</a><br /></td></tr>
<tr class="separator:a157e465a75a721fa7b2f805ff57c4d5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0649d9cd9eb94e284420c7a3c734904a"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a0649d9cd9eb94e284420c7a3c734904a">convert</a> (self, slpdata, custom_cutter=None)</td></tr>
<tr class="separator:a0649d9cd9eb94e284420c7a3c734904a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0790584c87c48bf95738b2b2f4ca2f14"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a0790584c87c48bf95738b2b2f4ca2f14">__enter__</a> (self)</td></tr>
<tr class="separator:a0790584c87c48bf95738b2b2f4ca2f14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39703847165efd7f5527553633bd9e91"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a39703847165efd7f5527553633bd9e91">__exit__</a> (self, exctype, value, traceback)</td></tr>
<tr class="separator:a39703847165efd7f5527553633bd9e91"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ab8cdaf7c309255571f22a4a494543d1a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#ab8cdaf7c309255571f22a4a494543d1a">palette</a></td></tr>
<tr class="separator:ab8cdaf7c309255571f22a4a494543d1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f4f313ff0dda07087f2ef915dbb6e6d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a1f4f313ff0dda07087f2ef915dbb6e6d">fake</a></td></tr>
<tr class="separator:a1f4f313ff0dda07087f2ef915dbb6e6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95f6aaad729ef45ec619b83d848ba296"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a95f6aaad729ef45ec619b83d848ba296">idle</a></td></tr>
<tr class="separator:a95f6aaad729ef45ec619b83d848ba296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5583e4dd38e36e03dd67f98da7484e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#aa5583e4dd38e36e03dd67f98da7484e0">job_mutex</a></td></tr>
<tr class="separator:aa5583e4dd38e36e03dd67f98da7484e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a828ee90e56e649ae32451a71388afa02"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a828ee90e56e649ae32451a71388afa02">processes</a></td></tr>
<tr class="separator:a828ee90e56e649ae32451a71388afa02"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Multiprocessing-based pool of SLP converter processes. </p>

<p class="definition">Definition at line <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00029">29</a> of file <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a23af83e63aa7db225c65bc947cb7ad3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23af83e63aa7db225c65bc947cb7ad3c">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.slp_converter_pool.SLPConverterPool.__init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>palette</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>jobs</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00030">30</a> of file <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keyword">def </span>__init__(self, palette, jobs=None):</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keywordflow">if</span> jobs <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            jobs = os.cpu_count()</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        self.palette = palette</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        self.fake = (jobs == 1)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordflow">if</span> self.fake:</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="comment"># don&#39;t actually create the entire multiprocessing thing.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            <span class="comment"># self.convert() will just do the conversion directly.</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="comment"># Holds the queues for all currently-idle processes.</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="comment"># those queues accept slpdata (bytes) objects, and provide</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="comment"># Texture objects in return.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="comment"># Note that this is a queue.Queue, not a multiprocessing.Queue.</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        self.idle = queue.Queue()</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="comment"># guards new job submission so we can &quot;throttle&quot; it.</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        self.job_mutex = Lock()</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="comment"># Holds tuples of (process, queue) for all processes.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="comment"># Needed for proper termination in close().</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        self.processes = []</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="comment"># spawn worker processes,</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="comment"># each has a queue where data is pushed to the process.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(jobs):</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            inqueue = multiprocessing.Queue()</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            outqueue = multiprocessing.Queue()</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            process = multiprocessing.Process(</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                target=converter_process,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                args=(inqueue, outqueue)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            )</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            process.start()</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            self.processes.append((process, inqueue))</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="comment"># send initial configuration to process</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            inqueue.put(<a class="code" href="../../dd/d1a/namespaceopenage_1_1log.xhtml#a2b8905069877587c7f8624a11d524bbc">get_loglevel</a>())</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            inqueue.put(palette)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            self.idle.put((inqueue, outqueue))</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a2b8905069877587c7f8624a11d524bbc"><div class="ttname"><a href="../../dd/d1a/namespaceopenage_1_1log.xhtml#a2b8905069877587c7f8624a11d524bbc">openage::log.get_loglevel</a></div><div class="ttdeci">def get_loglevel()</div><div class="ttdoc">gets the log level </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d66/log_2____init_____8py_source.xhtml#l00097">__init__.py:97</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0790584c87c48bf95738b2b2f4ca2f14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0790584c87c48bf95738b2b2f4ca2f14">&#9670;&nbsp;</a></span>__enter__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.slp_converter_pool.SLPConverterPool.__enter__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00122">122</a> of file <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">def </span>__enter__(self):</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">return</span> self</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div></div><!-- fragment -->
</div>
</div>
<a id="a39703847165efd7f5527553633bd9e91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39703847165efd7f5527553633bd9e91">&#9670;&nbsp;</a></span>__exit__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.slp_converter_pool.SLPConverterPool.__exit__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>exctype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>traceback</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00125">125</a> of file <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a>.</p>

<p class="reference">References <a class="el" href="../../de/d03/filelike_2native_8cpp_source.xhtml#l00139">openage::util::filelike::Native.close()</a>, <a class="el" href="../../dd/d12/codegen_8py_source.xhtml#l00046">openage.codegen.codegen.WriteCatcher.close()</a>, <a class="el" href="../../da/de4/filelike_2python_8cpp_source.xhtml#l00060">openage::util::filelike::Python.close()</a>, <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00078">openage.convert.slp_converter_pool.SLPConverterPool.close()</a>, <a class="el" href="../../db/da6/classopenage_1_1util_1_1filelike_1_1_file_like.xhtml#a7ad98df2b552e013bce31d81a5e36d23">openage::util::filelike::FileLike.close()</a>, <a class="el" href="../../d2/d93/lzxdstream_8py_source.xhtml#l00096">openage.cabextract.lzxdstream.LZXDStream.close()</a>, <a class="el" href="../../df/dd5/file_8cpp_source.xhtml#l00086">openage::util::File.close()</a>, and <a class="el" href="../../d9/d50/cab_8py_source.xhtml#l00548">openage.cabextract.cab.CABFolderStream.close()</a>.</p>
<div class="fragment"><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keyword">def </span>__exit__(self, exctype, value, traceback):</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        del exctype, value, traceback  <span class="comment"># unused</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        self.close()</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div></div><!-- fragment --><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_a39703847165efd7f5527553633bd9e91_cgraph.svg" width="488" height="526"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a157e465a75a721fa7b2f805ff57c4d5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a157e465a75a721fa7b2f805ff57c4d5f">&#9670;&nbsp;</a></span>close()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.slp_converter_pool.SLPConverterPool.close </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Closes the converter pool, quitting all the processes. </p>

<p class="definition">Definition at line <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00078">78</a> of file <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a>.</p>

<p class="reference">References <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00036">openage.convert.slp_converter_pool.SLPConverterPool.fake</a>, and <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00053">openage.convert.slp_converter_pool.SLPConverterPool.processes</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../da/d37/filelike_2abstract_8py_source.xhtml#l00111">openage.util.filelike.abstract.FileLikeObject.__exit__()</a>, and <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00125">openage.convert.slp_converter_pool.SLPConverterPool.__exit__()</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="stringliteral">        if self.fake:</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">            return</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">        for process, inqueue in self.processes:</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="stringliteral">            inqueue.put(StopIteration)</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="stringliteral">            process.join()</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral"></span></div><span class="stringliteral"></div><!-- fragment --><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="../../closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_a157e465a75a721fa7b2f805ff57c4d5f_icgraph.svg" width="459" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a0649d9cd9eb94e284420c7a3c734904a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0649d9cd9eb94e284420c7a3c734904a">&#9670;&nbsp;</a></span>convert()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.slp_converter_pool.SLPConverterPool.convert </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>slpdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>custom_cutter</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00090">90</a> of file <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a>.</p>

<p class="reference">References <a class="el" href="../../d7/d66/log_2____init_____8py_source.xhtml#l00122">openage::log.err()</a>, <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00036">openage.convert.slp_converter_pool.SLPConverterPool.fake</a>, <a class="el" href="../../d8/d66/system_8py_source.xhtml#l00020">openage.util.system.free_memory()</a>, <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00046">openage.convert.slp_converter_pool.SLPConverterPool.idle</a>, <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00049">openage.convert.slp_converter_pool.SLPConverterPool.job_mutex</a>, <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00034">openage.convert.slp_converter_pool.SLPConverterPool.palette</a>, <a class="el" href="../../d6/d5c/colortable_8py_source.xhtml#l00035">openage.convert.colortable.ColorTable.palette</a>, <a class="el" href="../../d6/d5c/colortable_8py_source.xhtml#l00182">openage.convert.colortable.PlayerColorTable.palette</a>, and <a class="el" href="../../d7/d66/log_2____init_____8py_source.xhtml#l00117">openage::log.warn()</a>.</p>
<div class="fragment"><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="stringliteral">        if self.fake:</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral">            # convert right here, without entering the thread.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">            return Texture(SLP(slpdata), self.palette, custom_cutter)</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">        if free_memory() &lt; 2**30:</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">            # TODO print the warn only once</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="stringliteral">            warn(&quot;Low on memory; disabling parallel SLP conversion&quot;)</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral">            # acquire job_mutex in order to block any concurrent activity until</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral">            # this job is done.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="stringliteral">            with self.job_mutex:  # pylint: disable=not-context-manager</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral">                return Texture(SLP(slpdata), self.palette, custom_cutter)</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="stringliteral">        # get the data queue for an idle worker process</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="stringliteral">        inqueue, outqueue = self.idle.get()</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">        # restrict new job submission by free memory (see above)</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">        with self.job_mutex:  # pylint: disable=not-context-manager</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">            inqueue.put((slpdata, custom_cutter))</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">        result = outqueue.get()</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="stringliteral">        # the process is idle again.</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="stringliteral">        self.idle.put((inqueue, outqueue))</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="stringliteral">        if isinstance(result, BaseException):</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="stringliteral">            err(&quot;exception in worker process: %s&quot;, result)</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="stringliteral">            raise result</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="stringliteral">        return result</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="stringliteral"></span></div><span class="stringliteral"></div><!-- fragment --><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="../../closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_a0649d9cd9eb94e284420c7a3c734904a_cgraph.svg" width="424" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a1f4f313ff0dda07087f2ef915dbb6e6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f4f313ff0dda07087f2ef915dbb6e6d">&#9670;&nbsp;</a></span>fake</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.slp_converter_pool.SLPConverterPool.fake</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00036">36</a> of file <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00078">openage.convert.slp_converter_pool.SLPConverterPool.close()</a>, and <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00090">openage.convert.slp_converter_pool.SLPConverterPool.convert()</a>.</p>

</div>
</div>
<a id="a95f6aaad729ef45ec619b83d848ba296"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95f6aaad729ef45ec619b83d848ba296">&#9670;&nbsp;</a></span>idle</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.slp_converter_pool.SLPConverterPool.idle</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00046">46</a> of file <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00090">openage.convert.slp_converter_pool.SLPConverterPool.convert()</a>.</p>

</div>
</div>
<a id="aa5583e4dd38e36e03dd67f98da7484e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5583e4dd38e36e03dd67f98da7484e0">&#9670;&nbsp;</a></span>job_mutex</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.slp_converter_pool.SLPConverterPool.job_mutex</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00049">49</a> of file <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00090">openage.convert.slp_converter_pool.SLPConverterPool.convert()</a>.</p>

</div>
</div>
<a id="ab8cdaf7c309255571f22a4a494543d1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8cdaf7c309255571f22a4a494543d1a">&#9670;&nbsp;</a></span>palette</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.slp_converter_pool.SLPConverterPool.palette</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00034">34</a> of file <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00090">openage.convert.slp_converter_pool.SLPConverterPool.convert()</a>.</p>

</div>
</div>
<a id="a828ee90e56e649ae32451a71388afa02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a828ee90e56e649ae32451a71388afa02">&#9670;&nbsp;</a></span>processes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.slp_converter_pool.SLPConverterPool.processes</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00053">53</a> of file <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml#l00078">openage.convert.slp_converter_pool.SLPConverterPool.close()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/mnt/c/Users/Jameson/Desktop/git/openage-new-doc-system/openage/convert/<a class="el" href="../../dd/d1f/slp__converter__pool_8py_source.xhtml">slp_converter_pool.py</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/d23/namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="../../d2/d78/namespaceopenage_1_1convert.xhtml">convert</a></li><li class="navelem"><a class="el" href="../../d3/d62/namespaceopenage_1_1convert_1_1slp__converter__pool.xhtml">slp_converter_pool</a></li><li class="navelem"><a class="el" href="../../db/da7/classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml">SLPConverterPool</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
